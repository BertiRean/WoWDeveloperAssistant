<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABgAAAAWAAAAEgAAAAoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEwAAACsAAAA+R0VAbXNw
        aKeLh33fjomA6pSPhf+TjoT/ko6E/5KOg/+TjoT/mY+H/6iRjf86iV3/AL2A/wDgpv8AiEP/p4eH2IZy
        cKZURUVsAAAARAAAAEIAAAA7AAAALAAAABkAAAAKAAAAAgAAAAAAAAAAAAAAAAAAAA0AAAAueHNrqJeR
        h/+hm5H/saqh/8W8tP/Lw7r/49jQ/+Xc1P/q39f/7uPc//fo4v//7ev/Vqp8/wC3e/8A1p//ANah/wCE
        QP8Ah0L/AIhB/wCIQv8AiUX/AIlH/wCERuwAbDqoAAAAPwAAACkAAAASAAAABAAAAAAAAAAAAAAAFYiE
        e8Ggm5H/yMG3/9LKwf/Ty8L/187F/9nQyP/d08v/39bO/+PZ0f/o3db/+eTg/0umeP8Asnf/AM+d/wDO
        m/8Azpz/ANGe/wDSn/8A0qD/ANKg/wDSoP8A06L/AMWR/wCpb/8Ajk7/AGY2mAAAADAAAAASAAAAAwAA
        AAAAAAAWmZSJ/8jBt//LxLr/zsa9/9DIv//Uy8L/187G/9vRyf/e1c3/4tjQ/+jc1v/85OH/AH4z/1Dg
        xP8AyJv/AMeZ/wDGmP8RzKP/EM2k/w/NpP8QzaT/Ec2k/wDImv8AyZv/AMyf/wDFl/8AlVf/AHpBwgAA
        ACwAAAANAAAAAQAAABaZk4n/ysK5/8rDuf/Nxbz/0Mi//9TLwv/Xzsb/29HJ/97Vzf/i2ND/59vV//fi
        3/9KpXb/AKp1/3Tizv8AwZb/cN/J/3DhzP9x4s7/cOLO/3Hizv9x4s7/ceHN/2Pcxv8t0LD/AMOb/wDF
        nP8Allf/AHE8ogAAAB4AAAAFAAAAFpqUiv/Jwbj/ycK4/8zEu//Oxr3/0snA/9XMxP/Zz8f/3NPL/+HW
        zv/l2tP/79/Z///k4v9Lo3P/AKZz/5Do2v+P6Nr/AH83/wCBOP8AgDf/AIE3/wCBOP8Nn2f/QsOf/5Dn
        2v9Y1sD/AL+a/wDAnf8Ajk3/ADsgSgAAAA4AAAAWmpWJ/8jAt//HwLb/1M3E/+Td1v/y7eX/9vHq///8
        9f//+/T///v0//768///+vP///z2/////v9VsIH/AKV0/7Xy7/8Agjn///b3//zk4v/bzsf/nbOe/4Gr
        jf8AhUT/L6t6/7Lu6P84y7T/ALye/wCrgf8AfEG9AAAAFAAAABSalYr/08zD//bx6v/v6eP/2tXN/8rC
        uv+8s6v/tKuh/7Wqof+3rKP/uq6n/72xqP/Asar/xLGr/8+yr/83kWD/AKV7/wCEO//gycX/4dbQ/+/m
        4f/98u7/383I/6OTi/8AgTvlYMWn/6To4f8As5j/ALac/wCLR/8AAAAWAAAAEJuVi//y7OT/uK+m/6Wc
        kf+ropj/u7Kp/8W6sf/RyL//18vC/+zd1//44+D//+jn///q6f//5ub//+Ph//zc2/9Io3T/AII2/9G7
        tv+3q6P/q6GY/7mvpv/37Ob/tZ6Z/wBeLVsioW3/wvP0/6Do5f+p7e3/AIpH/wAAABAAAAAQjYd9tbWs
        pP+1raL/ycG4/9PLwv/WzcT/2dDI/93Ty//i19D/4NjP/xCSV/8AgDn/AH86/wCBOv8AgTj/ssez//HY
        1f/n1ND/3M/I/9TLwv/RyMD/xbmx/8axrP+ghIOvAFIqPwCLSP8AiET/AIhC/wCKRv8AjEzwAAAABQAA
        ABSLhny4t6+k/8vFuv/Oxr3/0cnA/9TLwv/Xzsb/29HJ/+LX0P/l2NH/AIA5/w/qq/8A5KH/AOWh/wCh
        W/+Wu6H/7dfT/97Ryv/XzcT/0snB/9HHv//axsH/AIY9/wBzOrcAAAAxAAAAFAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAFqCZj//Kwrn/ysO5/83FvP/QyL//1MvC/9fOxv/b0cn/4dbP//fe2/8Afzb/MeSx/w3e
        ov8A3Zz/AMiH/wyMT//p1M//59PP/93Ox//Wy8P/1cjB/+DHxP8Ahj//AMaE/wB2PsAAAAAyAAAAFAAA
        AAMAAAAAAAAAAAAAAAAAAAAWoJqO/8nBuP/Jwrj/zMS7/87Gvf/SycD/1czE/9nPx//f1Mz/8NvW/0qi
        dP8rxJL/MeCx/wDVmf8A2Z7/AKFh/wuMTv+Rt5z/qr+q/+rPzP/nzMn/7snK/wCEP/8A4Kb/AL6B/wB3
        PsEAAAAyAAAAFAAAAAQAAAAAAAAAAAAAABagmo//yMC3/8fAtv/UzcT/5N3W//Lt5f/28er///z1///7
        9f///fn/2+jb/waSVP9w6Mv/DNOi/wDRmf8A1J3/AMCG/wChYf8AiEL/AII8/wCDPP8AhD7/AII+/wDW
        of8A1qD/ALmA/wB3PsEAAAAuAAAADQAAAAAAAAAAAAAAFKCajv/Ty8P/9vHq/+/p4//a1c3/ysK6/7yz
        q/+0q6H/taqh/7mtpP/Gsq3/U5hw/0Syg/+E6dL/GdOn/wDMmP8AzZr/AM+c/wDRnv8A0Z//ANGf/wDR
        n/8A0J7/AM6c/wDOm/8A0Z//ALiB/wB8QsAAAAASAAAAAAAAAAAAAAAQopqP//Hr5P+3r6b/pZyR/6ui
        mP+7sqn/xbqx/9HIv//Vy8L/4tfQ/+3f2v/95eL/T6l7/0WxhP+Q6NX/Vt3B/yTSq/8dz6f/AM6j/wHP
        pP8Bz6T/Ac6j/wDOo/8Axpj/AMeZ/wDJnP9j5s3/AIpH/wAAAA0AAAAAAAAAAAAAABCSjIK1tKyj/7Wt
        ov/Jwbj/08vC/9bNxP/Z0Mj/3dPL/9/Wz//j2dH/59zV/+/g2//75OH/erWS/x2ZYP9Uvpf/keXT/5fs
        3f9K6dL/TunS/0/p0v9P6dL/TOjQ/5Pn1/8Awpf/YN7G/wCxgf8AhkazAAAABAAAAAAAAAAAAAAAFJGL
        gLi2rqT/y8S6/87Gvf/RycD/1MvC/9fOxv/b0cn/3tXN/+LY0P/l29T/69/Y/+/h2//x39v/5NjQ/2Ws
        hf8NkFH/AH81/wCAN/8AgTf/AIE4/wCCOv8AgDj/geTV/1raxP8ArX//AIRErgAAAAMAAAAAAAAAAAAA
        AAAAAAAWpZ6T/8nBuf/Kw7n/zcW8/9DIv//Uy8L/187G/9vRyf/e1c3/4tjQ/+Xb1P/p3tf/69/Y/+jc
        1v/p29T/6tnU/+zW0v/r1ND/6tHN/+bOyv/ly8j/7MnJ/wCEPP934tf/AKp//wCEQ64AAAADAAAAAAAA
        AAAAAAAAAAAAAAAAABamn5T/yMC4/8nCuP/Mw7r/zsa9/9LIv//Vy8P/2c7G/9zSyv/g1s7/49nS/+jd
        1v/q3tf/5drT/+LXz//f1Mz/3NDJ/9nNxv/WysL/08jA/9PGv//fxsP/AIY9/wCqg/8AgkKuAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFqegk//Hvrb/xr+0/9LLwv/i29P/8Ori//Pu5//9+vP//fny//34
        8v/8+PH//Pjx//z48f/8+PH//fjy//358v/9+fP/8+7n/+/q4v/i3NP/1czE/9XCvP8AhDj/PZRl/wAA
        ABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWpp+T/8/Iv//49Oz///r0//jy6//p4tr/49rT/9fP
        xv/Uy8L/1MvC/9TLwv/Uy8L/1MvC/9TLwv/Uy8L/1MvC/9fPxv/j2tP/6eLa//jy6///+vT/+vHr/9zL
        xv+1oZn/AAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABamnpP///z1/+rj2//TycD/zcO5/87F
        uv/Oxbv/z8a7/8/GvP/Pxrz/z8a8/8/GvP/Pxrz/z8a8/8/GvP/Pxrz/z8a7/87Fu//Oxbr/zcO5/9PJ
        wP/q49z///z2/66kmv8AAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaafk//s5d3/1czC/9XM
        wv/WzcP/187D/9fOxP/XzsT/187E/9fOxP/XzsT/187E/9fOxP/XzsT/187E/9fOxP/XzsT/187E/9fO
        w//WzcP/1czC/9XMwv/s5d3/pp+T/wAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqaKW/+DW
        zf/g1sz/3tXL/93Uyv/d1Mr/3dTK/93Uyv/d1Mr/3dTK/93Uyv/d1Mr/3dTK/93Uyv/d1Mr/3dTK/93U
        yv/d1Mr/3dTK/93Uyv/e1cv/39bM/+DWzf+popb/AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AASmnpOyta2h/97Vy//p4df/59/V/+be1P/l3dP/5d3T/+Tc0v/k3NL/5NzS/+Tc0v/k3NL/5NzS/+Tc
        0v/k3NL/5d3T/+Xd0//m3tT/59/V/+nh1//i2tD/ta2h/6aek7IAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAOnn5SJqqOW/7euo//Iv7T/2dHG/93Vyv/x6d//8Oje//Do3v/w6N7/8Oje//Do
        3v/w6N7/8Oje//Do3v/x6d//3dXK/9nRxv/Iv7T/t66j/6qilv+nn5SJAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoJmPN6afk4WpoZbSqaGV4qqilv+qopb/qqKW/6qi
        lv+qopb/qqKW/6qilv+qopb/qqKW/6qilv+poZXiqaGW0qafk4WgmY83AAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//D////g//4AAB/4AAAB8AAAAHAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAcAAAADAAAAAwAAAAMAAAADAAAAAwAAAAcAAAAPAAAAHwAA
        AD8AAAA/AAAAPwAAAD8AAAA/AAAAP4AAAH/gAAH/
</value>
  </data>
</root>